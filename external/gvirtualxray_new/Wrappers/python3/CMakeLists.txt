# Include python

find_package(PythonLibs 3 REQUIRED)
find_package(PythonInterp REQUIRED)

INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIR})


SET (module gvxrPython3)


configure_file(../gvxrWrapper-doc.in ${CMAKE_CURRENT_BINARY_DIR}/${module}.i)
SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/${module}.i PROPERTY CPLUSPLUS ON)

# Add swig module
IF(${CMAKE_VERSION} VERSION_LESS "3.8.0")
    SWIG_ADD_MODULE(${module} python ${CMAKE_CURRENT_BINARY_DIR}/${module}.i)
ELSE (${CMAKE_VERSION} VERSION_LESS "3.8.0")
    SWIG_ADD_LIBRARY(${module} LANGUAGE python SOURCES ${CMAKE_CURRENT_BINARY_DIR}/${module}.i)
ENDIF (${CMAKE_VERSION} VERSION_LESS "3.8.0")

set_property(
    SOURCE ${CMAKE_CURRENT_BINARY_DIR}/${module}.i
    PROPERTY SWIG_MODULE_NAME ${module})

swig_link_libraries(${module} ${SimpleGVXR_LIBRARY} ${SimpleGVXR_LIBRARIES} ${PYTHON_LIBRARIES})

IF (USE_SUPERBUILD)
    ADD_DEPENDENCIES(${module} SimpleGVXR)
ENDIF ()

configure_file(test.py.in ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_FILES_DIRECTORY}/test.py)
FILE(COPY ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_FILES_DIRECTORY}/test.py
		DESTINATION ${CMAKE_CURRENT_BINARY_DIR}
		FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ
  			GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)

FILE(COPY ../welsh-dragon-small.stl DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

FILE(COPY computeLBuffer.py
		DESTINATION ${CMAKE_CURRENT_BINARY_DIR}
		FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ
  			GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)

# Files to install with Python
set(PYTHON_INSTALL_FILES
        ${CMAKE_CURRENT_BINARY_DIR}/${module}.py
)

IF (WIN32 AND MSVC)
	set(PYTHON_INSTALL_FILES
		${PYTHON_INSTALL_FILES}
		${CMAKE_CURRENT_BINARY_DIR}/Release/_${module}.pyd)

ELSE (WIN32 AND MSVC)
 	set(PYTHON_INSTALL_FILES
		${PYTHON_INSTALL_FILES}
		${CMAKE_CURRENT_BINARY_DIR}/_${module}.so)

ENDIF (WIN32 AND MSVC)

# Configure setup.py and copy to output directory
set(SETUP_PY_IN ${CMAKE_CURRENT_SOURCE_DIR}/setup.py.in)
set(SETUP_PY_OUT ${CMAKE_CURRENT_BINARY_DIR}/setup.py)
configure_file(${SETUP_PY_IN} ${SETUP_PY_OUT})

# Install target to call setup.py
add_custom_target(install-${module}
        DEPENDS ${module}
        COMMAND ${PYTHON_EXECUTABLE} ${SETUP_PY_OUT} install --skip-build --root ${CMAKE_CURRENT_BINARY_DIR})



install(FILES
    ${PYTHON_INSTALL_FILES}
    DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/python3
    COMPONENT Python3)

install(FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/test.py ${CMAKE_CURRENT_SOURCE_DIR}/test-offscreen.py ${CMAKE_CURRENT_SOURCE_DIR}/job.sh
    DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/python3
    PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
    COMPONENT Demos)

install(FILES
    DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/python3
    PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
    COMPONENT Python3)

    SET (CPACK_COMPONENTS_ALL ${CPACK_COMPONENTS_ALL}  Python3 PARENT_SCOPE)
