find_package(Ruby REQUIRED)

INCLUDE_DIRECTORIES(${RUBY_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${RUBY_INCLUDE_DIRS})

SET (module gvxrRuby)


configure_file(../gvxrWrapper-nodoc.in ${CMAKE_CURRENT_BINARY_DIR}/${module}.i)
SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/${module}.i PROPERTY CPLUSPLUS ON)

# Add swig module
IF(${CMAKE_VERSION} VERSION_LESS "3.8.0")
    SWIG_ADD_MODULE(${module} ruby ${CMAKE_CURRENT_BINARY_DIR}/${module}.i)
ELSE (${CMAKE_VERSION} VERSION_LESS "3.8.0")
    SWIG_ADD_LIBRARY(${module} LANGUAGE ruby SOURCES ${CMAKE_CURRENT_BINARY_DIR}/${module}.i)
ENDIF (${CMAKE_VERSION} VERSION_LESS "3.8.0")

set_property(
    SOURCE ${CMAKE_CURRENT_BINARY_DIR}/${module}.i
    PROPERTY SWIG_MODULE_NAME ${module})

swig_link_libraries(${module} ${SimpleGVXR_LIBRARY} ${SimpleGVXR_LIBRARIES})

configure_file(test.rb.in ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_FILES_DIRECTORY}/test.rb)
FILE(COPY ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_FILES_DIRECTORY}/test.rb
		DESTINATION ${CMAKE_CURRENT_BINARY_DIR}
		FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ
  			GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)

FILE(COPY ../welsh-dragon-small.stl DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

FILE(COPY runRubyTest.sh
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR}
    FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ
        GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)

install(FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/test.rb
    DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/ruby
    PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
    COMPONENT Demos)

IF (UNIX)
    install(FILES
        ${CMAKE_CURRENT_BINARY_DIR}/${module}.so
        DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/ruby
        PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
        COMPONENT Ruby)

    install(FILES
    	  ${CMAKE_CURRENT_BINARY_DIR}/runRubyTest.sh
        DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/ruby
        PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
        COMPONENT R)
ENDIF (UNIX)

SET (CPACK_COMPONENTS_ALL ${CPACK_COMPONENTS_ALL}  Ruby PARENT_SCOPE)
