SET (module gvxrCSharp)


configure_file(../gvxrWrapper-doc.in ${CMAKE_CURRENT_BINARY_DIR}/${module}.i)
SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/${module}.i PROPERTY CPLUSPLUS ON)

# Add swig module
IF(${CMAKE_VERSION} VERSION_LESS "3.8.0")
    SWIG_ADD_MODULE(${module} csharp ${CMAKE_CURRENT_BINARY_DIR}/${module}.i)
ELSE (${CMAKE_VERSION} VERSION_LESS "3.8.0")
    SWIG_ADD_LIBRARY(${module} LANGUAGE csharp SOURCES ${CMAKE_CURRENT_BINARY_DIR}/${module}.i)
ENDIF (${CMAKE_VERSION} VERSION_LESS "3.8.0")

set_property(
    SOURCE ${CMAKE_CURRENT_BINARY_DIR}/${module}.i
    PROPERTY SWIG_MODULE_NAME ${module})

swig_link_libraries(${module} ${SimpleGVXR_LIBRARY} ${SimpleGVXR_LIBRARIES} ${CSHARP_LIBRARIES})

configure_file(test.cs.in ${CMAKE_CURRENT_BINARY_DIR}/test.cs)
FILE(COPY ../welsh-dragon-small.stl DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
FILE(COPY runMonoTest.sh
		DESTINATION ${CMAKE_CURRENT_BINARY_DIR}
		FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ
  			GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)

install(FILES
    ${CMAKE_CURRENT_BINARY_DIR}/gvxrCSharp.cs ${CMAKE_CURRENT_SOURCE_DIR}/test.cs ${CMAKE_CURRENT_BINARY_DIR}/Vectori.cs ${CMAKE_CURRENT_BINARY_DIR}/Vectorf.cs ${CMAKE_CURRENT_BINARY_DIR}/Vectorff.cs ${CMAKE_CURRENT_BINARY_DIR}/Vectord.cs ${CMAKE_CURRENT_BINARY_DIR}/gvxrCSharpPINVOKE.cs
    DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/csharp
    COMPONENT "C#")

IF (UNIX)
    install(FILES
        ${CMAKE_CURRENT_BINARY_DIR}/${module}.so
        DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/csharp
        PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
        COMPONENT "C#")

    install(FILES
        ${CMAKE_CURRENT_BINARY_DIR}/runMonoTest.sh
        DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/csharp
        PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
        COMPONENT Demos)

ENDIF (UNIX)

SET (CPACK_COMPONENTS_ALL ${CPACK_COMPONENTS_ALL}  "C#" PARENT_SCOPE)
